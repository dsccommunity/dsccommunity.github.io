<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Style Guidelines on </title>
    <link>https://dsccommunity.org/styleguidelines/</link>
    <description>Recent content in Style Guidelines on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 28 Jan 2019 11:02:05 +0600</lastBuildDate>
    <atom:link href="https://dsccommunity.org/styleguidelines/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Markdown Files</title>
      <link>https://dsccommunity.org/styleguidelines/markdown-files/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/markdown-files/</guid>
      <description>&lt;h3 id=&#34;line-length-not-longer-than-80-characters&#34;&gt;Line length not longer than 80 characters&lt;/h3&gt;&#xA;&lt;p&gt;Rows longer than 80 characters should be split into multiple lines where appropriate.&#xA;This helps make it easier for reviewers to make review comments and for the&#xA;contributors to see where the requested changes are (without scrolling).&#xA;It is also easier to see the lines in split view mode when the lines don&amp;rsquo;t wrap&#xA;on the screen. It will also improve the readability when using &lt;code&gt;git diff&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>General</title>
      <link>https://dsccommunity.org/styleguidelines/general/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/general/</guid>
      <description>&lt;h2 id=&#34;correct-file-encoding&#34;&gt;Correct File Encoding&lt;/h2&gt;&#xA;&lt;p&gt;Make sure all files are encoded using UTF-8 (not UTF-8 with BOM), except mof files&#xA;which should be encoded using ASCII.&#xA;You can use &lt;code&gt;ConvertTo-UTF8&lt;/code&gt; and &lt;code&gt;ConvertTo-ASCII&lt;/code&gt; to convert a file to&#xA;UTF-8 or ASCII.&lt;/p&gt;&#xA;&lt;h2 id=&#34;descriptive-names&#34;&gt;Descriptive Names&lt;/h2&gt;&#xA;&lt;p&gt;Use descriptive, clear, and full names for all variables, parameters, and functions.&#xA;All names must be at least more than &lt;strong&gt;2&lt;/strong&gt; characters.&#xA;No abbreviations should be used.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$r = Get-RdsHost&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Whitespace</title>
      <link>https://dsccommunity.org/styleguidelines/whitespace/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/whitespace/</guid>
      <description>&lt;h2 id=&#34;indentation&#34;&gt;Indentation&lt;/h2&gt;&#xA;&lt;p&gt;For all indentation, use &lt;strong&gt;4&lt;/strong&gt; spaces instead of tabs.&#xA;There should be no tab characters in the file unless they are in a here-string.&lt;/p&gt;&#xA;&lt;h2 id=&#34;no-trailing-whitespace-after-backticks&#34;&gt;No Trailing Whitespace After Backticks&lt;/h2&gt;&#xA;&lt;p&gt;Backticks should always be directly followed by a newline&lt;/p&gt;&#xA;&lt;h2 id=&#34;newline-at-end-of-file&#34;&gt;Newline at End of File&lt;/h2&gt;&#xA;&lt;p&gt;All files must end with a newline, see &lt;a href=&#34;http://stackoverflow.com/questions/5813311/no-newline-at-end-of-file&#34;&gt;StackOverflow.&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;newline-character-encoding&#34;&gt;Newline Character Encoding&lt;/h2&gt;&#xA;&lt;p&gt;Save &lt;a href=&#34;http://en.wikipedia.org/wiki/Newline&#34;&gt;newlines&lt;/a&gt; using CR+LF instead of CR.&#xA;For interoperability reasons, we recommend that you follow &lt;a href=&#34;GettingStartedWithGitHub.md#setup-git&#34;&gt;these instructions&lt;/a&gt;&#xA;when installing Git on Windows so that newlines saved to GitHub are simply CRs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Functions</title>
      <link>https://dsccommunity.org/styleguidelines/functions/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/functions/</guid>
      <description>&lt;h2 id=&#34;function-names-use-pascal-case&#34;&gt;Function Names Use Pascal Case&lt;/h2&gt;&#xA;&lt;p&gt;Function names must use PascalCase.  This means that each concatenated word is capitalized.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; get-targetresource&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; Get-TargetResource&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;function-names-use-verb-noun-format&#34;&gt;Function Names Use Verb-Noun Format&lt;/h2&gt;&#xA;&lt;p&gt;All function names must follow the standard PowerShell Verb-Noun format.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; TargetResourceGetter&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; Get-TargetResource&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;function-names-use-approved-verbs&#34;&gt;Function Names Use Approved Verbs&lt;/h2&gt;&#xA;&lt;p&gt;All function names must use &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/ms714428%28v=vs.85%29.aspx&#34;&gt;approved verbs&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Parameters</title>
      <link>https://dsccommunity.org/styleguidelines/parameters/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/parameters/</guid>
      <description>&lt;h2 id=&#34;correct-format-for-parameter-block&#34;&gt;Correct Format for Parameter Block&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;An empty parameter block should be displayed on its own line like this:&#xA;&lt;code&gt;param ()&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;A non-empty parameter block should have the opening and closing parentheses on&#xA;their own line.&lt;/li&gt;&#xA;&lt;li&gt;All text inside the parameter block should be indented once.&lt;/li&gt;&#xA;&lt;li&gt;Every parameter should include the &lt;code&gt;[Parameter()]&lt;/code&gt; attribute, regardless of&#xA;whether the attribute requires decoration or not.&lt;/li&gt;&#xA;&lt;li&gt;A parameter that is mandatory should contain this decoration:&#xA;&lt;code&gt;[Parameter(Mandatory = $true)]&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;A parameter that is not mandatory should &lt;em&gt;not&lt;/em&gt; contain a &lt;code&gt;Mandatory&lt;/code&gt; decoration&#xA;in the &lt;code&gt;[Parameter()]&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Variables</title>
      <link>https://dsccommunity.org/styleguidelines/variables/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/variables/</guid>
      <description>&lt;h2 id=&#34;variable-names-use-camel-case&#34;&gt;Variable Names Use Camel Case&lt;/h2&gt;&#xA;&lt;p&gt;Variable names should use camelCase.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; Write-Log&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $VerboseMessage = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;New log message&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Verbose $VerboseMessage&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; Write-Log&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $verbosemessage = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;New log message&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Verbose $verbosemessage&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; Write-Log&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $verboseMessage = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;New log message&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Write-Verbose $verboseMessage&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;script-environment-and-global-variable-names-include-scope&#34;&gt;Script, Environment and Global Variable Names Include Scope&lt;/h2&gt;&#xA;&lt;p&gt;Script, environment, and global variables must always include their scope in the&#xA;variable name unless the &amp;lsquo;using&amp;rsquo; scope is needed. The script and global scope&#xA;specifications should be all in lowercase. Script and global variable names following&#xA;the scope should use camelCase.&lt;/p&gt;</description>
    </item>
    <item>
      <title>General Best Practices</title>
      <link>https://dsccommunity.org/styleguidelines/general-best-practices/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/general-best-practices/</guid>
      <description>&lt;p&gt;Although adopting the &lt;em&gt;best practices&lt;/em&gt; is optional, doing so will help improve the&#xA;quality of the DSC resource module.&lt;/p&gt;&#xA;&lt;p&gt;Note: Modules that aim to meet the &lt;a href=&#34;HighQualityModuleGuidelines.md&#34;&gt;High Quality Resource Module&lt;/a&gt;&#xA;standards must also implement the &lt;em&gt;best practices&lt;/em&gt; wherever possible.&lt;/p&gt;&#xA;&lt;h2 id=&#34;avoid-using-ard-coded-computer-name&#34;&gt;Avoid Using ard coded Computer Name&lt;/h2&gt;&#xA;&lt;p&gt;Using hard coded computer names exposes sensitive information on your machine.&#xA;Use a parameter or environment variable instead if a computer name is necessary.&#xA;This comes from &lt;a href=&#34;https://github.com/PowerShell/PSScriptAnalyzer/blob/development/RuleDocumentation/AvoidUsingComputerNameHardcoded.md&#34;&gt;this&lt;/a&gt;&#xA;PS Script Analyzer rule.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Calling Functions</title>
      <link>https://dsccommunity.org/styleguidelines/calling-functions/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/calling-functions/</guid>
      <description>&lt;h2 id=&#34;avoid-cmdlet-aliases&#34;&gt;Avoid Cmdlet Aliases&lt;/h2&gt;&#xA;&lt;p&gt;When calling a function use the full command not an alias.&#xA;You can get the full command an alias represents by calling &lt;code&gt;Get-Alias&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ls &lt;span style=&#34;color:#f92672&#34;&gt;-File&lt;/span&gt; $root -Recurse | ? { @(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.gitignore&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.mof&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-contains&lt;/span&gt; $_.Extension }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Powershell&#34; data-lang=&#34;Powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Get-ChildItem &lt;span style=&#34;color:#f92672&#34;&gt;-File&lt;/span&gt; $root -Recurse | Where-Object -FilterScript {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.gitignore&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.mof&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;-contains&lt;/span&gt; $_.Extension&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;avoid-invoke-expression&#34;&gt;Avoid Invoke-Expression&lt;/h3&gt;&#xA;&lt;p&gt;Invoke-Expression is vulnerable to string injection attacks.&#xA;It should not be used in any DSC resources.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Invoke-Expression -Command &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Test-&lt;/span&gt;$DSCResourceName&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writing Functions</title>
      <link>https://dsccommunity.org/styleguidelines/writing-functions/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/writing-functions/</guid>
      <description>&lt;h2 id=&#34;avoid-default-values-for-mandatory-parameters&#34;&gt;Avoid Default Values for Mandatory Parameters&lt;/h2&gt;&#xA;&lt;p&gt;Default values for mandatory parameters will always be overwritten, thus they are&#xA;never used and can cause confusion.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; Get-Something&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;param&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [Parameter(&lt;span style=&#34;color:#a6e22e&#34;&gt;Mandatory&lt;/span&gt; = $true)]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $Name = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;My Name&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; Get-Something&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;param&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [Parameter(&lt;span style=&#34;color:#a6e22e&#34;&gt;Mandatory&lt;/span&gt; = $true)]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $Name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;avoid-default-values-for-switch-parameters&#34;&gt;Avoid Default Values for Switch Parameters&lt;/h2&gt;&#xA;&lt;p&gt;Switch parameters have 2 values - there or not there.&#xA;The default value is automatically $false so it doesn&amp;rsquo;t need to be declared.&#xA;If you are tempted to set the default value to $true - don&amp;rsquo;t - refactor your code&#xA;instead.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dsc Resource Functions</title>
      <link>https://dsccommunity.org/styleguidelines/dsc-resource-functions/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/dsc-resource-functions/</guid>
      <description>&lt;h2 id=&#34;return-a-hashtable-from-get-targetresource&#34;&gt;Return a Hashtable from Get-TargetResource&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;return-a-boolean-from-test-targetresource&#34;&gt;Return a Boolean from Test-TargetResource&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;avoid-returning-anything-from-set-targetresource&#34;&gt;Avoid Returning Anything From Set-TargetResource&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;define-get-targetresource-set-targetresource-and-test-targetresource-for-every-dsc-resource&#34;&gt;Define Get-TargetResource, Set-TargetResource, and Test-TargetResource for Every DSC Resource&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;get-targetresource-should-not-contain-unused-non-mandatory-parameters&#34;&gt;Get-TargetResource should not contain unused non-mandatory parameters&lt;/h2&gt;&#xA;&lt;p&gt;The inclusion of a non-mandatory parameter that is never used could signal that&#xA;there is a design flaw in the implementation of the &lt;code&gt;Get-TargetResource&lt;/code&gt; function.&#xA;The non-mandatory parameters that are used to call &lt;code&gt;Get-TargetResource&lt;/code&gt; should help&#xA;to retrieve the actual values of the properties for the resource.&#xA;For example, if there is a parameter &lt;code&gt;Ensure&lt;/code&gt; that is non-mandatory, that parameter&#xA;describes the state the resource should have, but it might not be used to retrieve&#xA;the actual values.&#xA;Another example would be if a parameter &lt;code&gt;FilePathName&lt;/code&gt; is set to be non-mandatory,&#xA;but &lt;code&gt;FilePathName&lt;/code&gt; is actually a property that &lt;code&gt;Get-TargetResource&lt;/code&gt; should return&#xA;the actual value of.&#xA;In that case it does not make sense to assign a value to &lt;code&gt;FilePathName&lt;/code&gt; when&#xA;calling &lt;code&gt;Get-TargetResource&lt;/code&gt; because that value will never be used.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Manifest</title>
      <link>https://dsccommunity.org/styleguidelines/manifest/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/manifest/</guid>
      <description>&lt;h2 id=&#34;avoid-using-deprecated-manifest-fields&#34;&gt;Avoid Using Deprecated Manifest Fields&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ensure-manifest-contains-correct-fields&#34;&gt;Ensure Manifest Contains Correct Fields&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;do-not-use-nestedmodules-to-export-shared-commands&#34;&gt;Do not use NestedModules to export shared commands&lt;/h2&gt;&#xA;&lt;p&gt;Since we don&amp;rsquo;t use the &lt;code&gt;RootModule&lt;/code&gt; key in the module manifest, we should not&#xA;use the &lt;code&gt;NestedModules&lt;/code&gt; key to add modules that export commands that are shared&#xA;between resource modules.&lt;/p&gt;&#xA;&lt;p&gt;Normally, a single list in the &lt;code&gt;RootModule&lt;/code&gt; key, can restrict what is&#xA;exported using the cmdlet &lt;code&gt;Export-ModuleMember&lt;/code&gt;. Since we don&amp;rsquo;t use the &lt;code&gt;RootModule&lt;/code&gt;&#xA;key we can&amp;rsquo;t restrict what is exported, so every nested module will export all the&#xA;commands (or all the commands restricted by &lt;code&gt;Export-ModuleMember&lt;/code&gt; in that&#xA;individual nested module). If two resource modules were to use the &lt;code&gt;NestedModules&lt;/code&gt;&#xA;method, it would result in one of them being unable to install since they have&#xA;conflicting exported commands.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Localization</title>
      <link>https://dsccommunity.org/styleguidelines/localization/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/localization/</guid>
      <description>&lt;p&gt;In each resource folder there should be at least one localization folder for&#xA;english language &amp;rsquo;en-US&amp;rsquo;. Add other localization folders as appropriate, the&#xA;correct folder name can be found by running &lt;code&gt;Get-UICulture&lt;/code&gt; on the node that&#xA;has a UI culture installed that the strings are being built for.&#xA;There is also the list of&#xA;&lt;a href=&#34;https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/available-language-packs-for-windows#language-packs&#34;&gt;Available Language Packs for Windows&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In each localization folder there should be a PowerShell data (.psd1) file named&#xA;&amp;lsquo;DSC_&amp;lt;ResourceName&amp;gt;.strings.psd1&amp;rsquo; (e.g. &amp;lsquo;DSC_Folder.strings.psd1&amp;rsquo;).&#xA;Each localized string file should contain the following with the correct&#xA;localization key and accompanying localization string value (the example uses&#xA;the friendly resource name of &amp;lsquo;Folder&amp;rsquo;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pester Tests</title>
      <link>https://dsccommunity.org/styleguidelines/pester-tests/</link>
      <pubDate>Mon, 28 Jan 2019 11:02:05 +0600</pubDate>
      <guid>https://dsccommunity.org/styleguidelines/pester-tests/</guid>
      <description>&lt;h2 id=&#34;capitalized-pester-assertions&#34;&gt;Capitalized Pester Assertions&lt;/h2&gt;&#xA;&lt;p&gt;Pester assertions should all start with capital letters. This makes code easier&#xA;to read.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Should return something&amp;#39;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    get-targetresource @testParameters | should -be &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;something&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;It &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Should return something&amp;#39;&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Get-TargetResource @testParameters | Should -Be &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;something&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;assertion-messages-start-with-should&#34;&gt;Assertion Messages Start with Should&lt;/h2&gt;&#xA;&lt;p&gt;Pester assertions should always start with the word &amp;lsquo;Should&amp;rsquo;. This is to ensure the&#xA;test results read more naturally as well as helping to indentify assertion messages&#xA;that aren&amp;rsquo;t making assertions.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
